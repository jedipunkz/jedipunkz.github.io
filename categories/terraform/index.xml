<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Terraform on jedipunkz 🚀 のブログ</title>
    <link>https://jedipunkz.github.io/categories/terraform/</link>
    <description>Recent content in Terraform on jedipunkz 🚀 のブログ</description>
    <image>
      <title>jedipunkz 🚀 のブログ</title>
      <url>https://jedipunkz.github.io/jedipunkz.jpg</url>
      <link>https://jedipunkz.github.io/jedipunkz.jpg</link>
    </image>
    <generator>Hugo -- 0.148.2</generator>
    <language>en</language>
    <lastBuildDate>Thu, 28 Nov 2024 00:00:27 +0900</lastBuildDate>
    <atom:link href="https://jedipunkz.github.io/categories/terraform/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>VPC Lattice &#43; ECS 構成を Terraform を通して理解</title>
      <link>https://jedipunkz.github.io/post/vpclattice-ecs/</link>
      <pubDate>Thu, 28 Nov 2024 00:00:27 +0900</pubDate>
      <guid>https://jedipunkz.github.io/post/vpclattice-ecs/</guid>
      <description>&lt;p&gt;jedipunkz です。VPC Lattice が ECS に対応したという情報が &lt;a href=&#34;https://aws.amazon.com/jp/about-aws/whats-new/2024/11/amazon-vpc-lattice-elastic-container-service/&#34;&gt;https://aws.amazon.com/jp/about-aws/whats-new/2024/11/amazon-vpc-lattice-elastic-container-service/&lt;/a&gt; にあがりました。この対応を Terraform を使って構成して検証してみるのが今回の目的になります。&lt;/p&gt;
&lt;h2 id=&#34;今回検証で用いたコード&#34;&gt;今回検証で用いたコード&lt;/h2&gt;
&lt;p&gt;検証コードは下記に置いておきました。
&lt;a href=&#34;https://github.com/jedipunkz/vpclattice-ecs-playground&#34;&gt;https://github.com/jedipunkz/vpclattice-ecs-playground&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;概要&#34;&gt;概要&lt;/h2&gt;
&lt;p&gt;構成の概要としては下記です。(Mermaid 記表でうまく描けていませんが)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPC1, VPC2 に跨る形で VPC Lattice Service Network が配置&lt;/li&gt;
&lt;li&gt;VPC2 上の何者か (例で EC2) が VPC1 上の ECS に接続可能&lt;/li&gt;
&lt;li&gt;その際は VPC Service Network を介して VPC Lattice Service がエンドポイントとして受ける (うまく描けてない)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という事は今まで複数の VPC 間で ECS のエンドポイントを共有しようとすると&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;VPC1, VPC2 とで VPC Peering を張る&lt;/li&gt;
&lt;li&gt;VPC1 上の Private Subnets 上で ALB を構築して ECS Service に接続する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;という構成が必要でしたが、VPC Lattice を使えばそれらが不要になる、という事です。&lt;/p&gt;
&lt;p&gt;&lt;img alt=&#34;VPC Lattice Overview&#34; loading=&#34;lazy&#34; src=&#34;../../pix/vpclattice-overview.png&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;今回検証した構成&#34;&gt;今回検証した構成&lt;/h2&gt;
&lt;p&gt;今回使った Terraform コードで構築した構成は下記です。各 AWS リソースの関係図になっています。
特徴としては&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
