<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>go on jedipunkz 🚀 のブログ</title>
    <link>https://jedipunkz.github.io/categories/go/</link>
    <description>Recent content in go on jedipunkz 🚀 のブログ</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sat, 05 Feb 2022 00:00:27 +0900</lastBuildDate><atom:link href="https://jedipunkz.github.io/categories/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>ECS コンテナにログインする CLI を Go 言語で作った話</title>
      <link>https://jedipunkz.github.io/post/ecs-login-cli/</link>
      <pubDate>Sat, 05 Feb 2022 00:00:27 +0900</pubDate>
      
      <guid>https://jedipunkz.github.io/post/ecs-login-cli/</guid>
      <description>こんにちは @jedipunkz 🚀 です。
今回は Go 言語で ECS コンテナにログインする CLI を作った話を書きます。
開発の経緯 自分はまだ Go 言語の初学者で学習のために開発するアイデアを探していた状態でした。そこで自分の勤めている会社で ECS Execute 機能を使ったコンテナログインの機能を開発者に提供していた事を思い出し色々調べていて「もう少し手間が省けないか？」と思い立った、という経緯で開発をはじめました。
awscli を使った ECS Execute 機能によるコンテナログイン 手間が多いと書きましたが実際に awscli を使う場合どの程度の手間があるのか簡単に記します。まず下記のコマンドを実行して
$ aws ecs list-tasks --cluster &amp;lt;クラスタ名&amp;gt; --service &amp;lt;サービス名&amp;gt; taskArn が得られるので Arn から task ID を拾って、その task ID を使って
$ aws ecs execute --cluster &amp;lt;クラスタ名&amp;gt; \  --task &amp;lt;task ID&amp;gt; \  -- container &amp;lt;コンテナ名&amp;gt; \  --interfactive \  --command &amp;#34;sh&amp;#34; とコマンドを実行することでコンテナにログイン出来ます。が手間が少し多いのと task ID を拾い出す作業も辛いので改善したい&amp;hellip;。</description>
    </item>
    
  </channel>
</rss>
